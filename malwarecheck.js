const fs = require("fs");
const crypto = require("crypto");
const path = require("path");

// List of potentially malicious SHA256 hashes
const maliciousHashes = require("./malHashes");

function calculateSHA256(filePath) {
  const hash = crypto.createHash("sha256");
  const data = fs.readFileSync(filePath);
  hash.update(data);
  return hash.digest("hex");
}

function scanDirectory(directory) {
  fs.readdirSync(directory).forEach((file) => {
    const fullPath = path.join(directory, file);
    try {
      if (fs.lstatSync(fullPath).isDirectory()) {
        scanDirectory(fullPath);
      } else {
        const fileHash = calculateSHA256(fullPath);
        if (maliciousHashes.includes(fileHash)) {
          console.log(`Potentially malicious file detected: ${fullPath}`);
        }
      }
    } catch (error) {
      console.error(`Error reading file: ${fullPath}`);
    }
  });
}

// Start scanning from root directory
scanDirectory("/");
